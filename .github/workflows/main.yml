name: 'Deploy Website'

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'public/**'
      - 'terraform/**'
      - '.github/workflows/**'
      - 'package.json'
      - 'index.html'
      - 'vite.config.ts'
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    name: 'Deploy Website'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-west-2"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Remove Terraform State Lock
        run: |
          aws dynamodb delete-item \
            --table-name "eco-cloud-guardian-tflocks-q0wmbvik" \
            --key '{"LockID": {"S": "eco-cloud-guardian-tfstate-q0wmbvik/test/terraform.tfstate"}}' \
            --region "us-west-2" || true

      - name: Update Backend Configuration
        working-directory: terraform/environments/test
        run: |
          sed -i "s/BUCKET_NAME_PLACEHOLDER/eco-cloud-guardian-tfstate-q0wmbvik/" main.tf
          sed -i "s/TABLE_NAME_PLACEHOLDER/eco-cloud-guardian-tflocks-q0wmbvik/" main.tf

      - name: Deploy Infrastructure
        working-directory: terraform/environments/test
        run: |
          terraform init
          terraform apply -auto-approve -var="jwt_secret=${{ secrets.JWT_SECRET }}"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: |
          bun install
          bun update caniuse-lite

      - name: Build Application
        run: bun run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to S3
        run: |
          cd terraform/environments/test
          BUCKET_NAME=$(terraform output -raw s3_bucket_name)
          cd ../../..
          aws s3 sync dist/ s3://$BUCKET_NAME --delete

      - name: Invalidate CloudFront Cache
        working-directory: terraform/environments/test
        run: |
          DIST_ID=$(terraform output -raw cloudfront_distribution_id)
          aws cloudfront create-invalidation --distribution-id $DIST_ID --paths "/*" 